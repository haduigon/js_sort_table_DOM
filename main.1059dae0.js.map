{"version":3,"sources":["scripts/main.js"],"names":["tbody","document","querySelectorAll","people","children","thead","querySelector","columns","headers","getClearData","data","index","clearData","toLowerCase","slice","replace","getComparison","x","y","comparisonResult","localeCompare","sortColumn","switching","shouldSwitch","i","length","innerText","parentNode","insertBefore","addEventListener","indexOf","event","target"],"mappings":";AAAA,aAgFC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5ED,IAAMA,EAAQC,SAASC,iBAAiB,SAElCC,EAASH,EAAM,GAAGI,SAElBC,EAAQJ,SAASK,cAAc,SAE/BC,EAAUF,EAAMD,SAAS,GAEzBI,EAAcD,EAAAA,EAAQH,UAM5B,SAASK,EAAaC,EAAMC,GACtBC,IAAAA,EAEID,OAAAA,GACD,KAAA,EAIA,KAAA,EACHC,EAAYF,EAAKG,cACjB,MAEG,KAAA,EACHD,GAAaF,EACb,MAEG,KAAA,EACHE,GAAaF,EAAKI,MAAM,GAAGC,QAAQ,IAAK,IAIrCH,OAAAA,EAGT,SAASI,EAAcC,EAAGC,GASjBC,MANU,iBAANF,EACUA,EAAEG,cAAcF,GAEhBD,EAAIC,EAAI,EAAI,EAMnC,SAASG,EAAWV,GAOXW,IANHA,IAEAC,EAEMC,EAJNF,GAAY,EAMTA,GAAW,CAGXE,IAFLF,GAAY,EAEPE,EAAI,EAAGA,EAAKrB,EAAOsB,OAAS,EAAID,IAK/BR,GAJJO,GAAe,EAIa,IAAxBP,EAHAP,EAAaN,EAAOqB,GAAGpB,SAASO,GAAOe,UAAWf,GAClDF,EAAaN,EAAOqB,EAAI,GAAGpB,SAASO,GAAOe,UAAWf,IAE3B,CAC7BY,GAAe,EACf,MAIAA,IACFpB,EAAOqB,GAAGG,WAAWC,aAAazB,EAAOqB,EAAI,GAAIrB,EAAOqB,IACxDF,GAAY,IA/DlBf,EAAQsB,iBAAiB,QAAS,WAChCR,OAAAA,EAAWb,EAAQsB,QAAQC,MAAMC","file":"main.1059dae0.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write code here\n\nconst tbody = document.querySelectorAll('tbody');\n\nconst people = tbody[0].children;\n\nconst thead = document.querySelector('thead');\n\nconst columns = thead.children[0];\n\nconst headers = [...columns.children];\n\ncolumns.addEventListener('click', () =>\n  sortColumn(headers.indexOf(event.target))\n);\n\nfunction getClearData(data, index) {\n  let clearData;\n\n  switch (index) {\n    case 0:\n      clearData = data.toLowerCase();\n      break;\n\n    case 1:\n      clearData = data.toLowerCase();\n      break;\n\n    case 2:\n      clearData = +data;\n      break;\n\n    case 3:\n      clearData = +data.slice(1).replace(',', '');\n      break;\n  }\n\n  return clearData;\n}\n\nfunction getComparison(x, y) {\n  let comparisonResult;\n\n  if (typeof x === 'string') {\n    comparisonResult = x.localeCompare(y);\n  } else {\n    comparisonResult = x > y ? 1 : 0;\n  }\n\n  return comparisonResult;\n}\n\nfunction sortColumn(index) {\n  let switching = true;\n\n  let shouldSwitch;\n\n  let x, y, i;\n\n  while (switching) {\n    switching = false;\n\n    for (i = 0; i < (people.length - 1); i++) {\n      shouldSwitch = false;\n      x = getClearData(people[i].children[index].innerText, index);\n      y = getClearData(people[i + 1].children[index].innerText, index);\n\n      if (getComparison(x, y) === 1) {\n        shouldSwitch = true;\n        break;\n      }\n    }\n\n    if (shouldSwitch) {\n      people[i].parentNode.insertBefore(people[i + 1], people[i]);\n      switching = true;\n    }\n  }\n}\n"]}